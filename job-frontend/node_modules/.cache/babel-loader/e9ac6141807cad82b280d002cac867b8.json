{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\job-portal-project-master\\\\job-portal-project-master\\\\job-frontend\\\\src\\\\Job Provider\\\\Components\\\\Report\\\\content\\\\Content.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FormGroup, FormControl, Col, Row, Table, Container, FormLabel } from \"react-bootstrap\";\nimport classes from \"./Content.module.css\";\nimport { useState, useEffect } from \"react\";\nimport useTable from \"../../../../hooks/useTable\";\nimport TableFooter from \"../../../../components/dashboard/Tables/TableFooter\";\nimport { CSVLink } from \"react-csv\";\nimport axios from \"axios\";\nimport Config from \"../../../../config/Config.json\"; // import dateFormat from 'dateformat';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Reports() {\n  _s();\n\n  const [reportsData, setReportsData] = useState([]);\n  const [page, setPage] = useState(1);\n  const {\n    slice,\n    range\n  } = useTable(reportsData, page, 5);\n  const [forminputs, setFormInputs] = useState({});\n  const [filterdates, setFilterDates] = useState({\n    startdate: \"\",\n    enddate: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    const fetchTd = async () => {\n      const res = await axios.get(`${Config.SERVER_URL + \"provider/jobs/\"}`, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        }\n      });\n      const updatedList = [...res.data.jobs]; // const updatedList = ord.map(item =>\n      //   {\n      //       return {...item, startDate:dateFormat(item.startDate,configData.DATE_FORMAT,true)}\n      //       //return{...item,created:new Intl.DateTimeFormat(\"en-IN\",\"mmmm dd, yyyy\" ).format(item.created)}\n      //       // configData.DATE_FORMAT_OBJECT\n      //   })\n      // setData(updatedList);\n\n      setReportsData(updatedList);\n    };\n\n    fetchTd();\n  }, []); // useEffect(() => {\n  //   const fetchbug = async () => {\n  //   await axios.get(\"http://localhost:3000/bugs\")\n  //       .then(res => {\n  //           const bugs = res.data;\n  //           setJsonBugs(bugs);\n  //       });\n  //   };\n  //   fetchbug();\n  // })\n\n  const validateStart = () => {\n    let error = \"\";\n\n    if (!forminputs[\"startdate\"] && forminputs[\"enddate\"]) {\n      error = \"please enter start date\";\n    }\n\n    if (!forminputs[\"startdate\"] && !forminputs[\"enddate\"]) {\n      setErrors({});\n    }\n\n    setErrors(values => ({ ...values,\n      startdate: error\n    }));\n  };\n\n  const validateEnd = () => {\n    let error = \"\";\n\n    if (!forminputs[\"enddate\"] && forminputs[\"startdate\"]) {\n      error = \"please enter end date\";\n    }\n\n    if (!forminputs[\"startdate\"] && !forminputs[\"enddate\"]) {\n      setErrors({});\n    } else if (forminputs[\"enddate\"] && forminputs[\"startdate\"]) {\n      let startdate = new Date(forminputs[\"startdate\"]);\n      let enddate = new Date(forminputs[\"enddate\"]);\n\n      if (startdate > enddate) {\n        error = \"end date should be greater than start date\";\n      }\n    }\n\n    setErrors(values => ({ ...values,\n      enddate: error\n    }));\n  };\n\n  const validate = () => {\n    validateStart();\n    validateEnd();\n\n    if (errors.startdate || errors.enddate) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleSubmit = () => {\n    if (validate()) {\n      setFilterDates({ ...forminputs\n      });\n    }\n\n    let stdate = new Date(forminputs.startdate);\n    let endate = new Date(forminputs.enddate);\n    let newData = reportsData.filter(report => {\n      // console.log(report);\n      let date = new Date(report.startDate);\n\n      if (date >= stdate && date <= endate) {\n        return report;\n      } // return;\n\n    }); // console.log(newData);\n\n    setReportsData(newData);\n  }; // console.log(reportsData);\n\n\n  const handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormInputs(values => ({ ...values,\n      [name]: value\n    }));\n  };\n\n  const Jobs = [...reportsData];\n  const headers = [{\n    label: \"JobId\",\n    key: \"jobId\"\n  }, {\n    label: \"ProviderId\",\n    key: \"providerId\"\n  }, {\n    label: \"Title\",\n    key: \"title\"\n  }, {\n    label: \"StartDate\",\n    key: \"startDate\"\n  }, {\n    label: \"EndDate\",\n    key: \"endDate\"\n  }];\n  const csvLink = {\n    headers: headers,\n    data: Jobs,\n    filename: \"csvfile.csv\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: classes.rowStyle,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: `${classes.repo} col-md-3`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.span11,\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: classes.filters,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: `${classes.str1} ${classes}`,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            controlId: \"reportstartdate\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  className: classes.textstyl,\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"StartDate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: classes.input,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  className: classes.str2,\n                  onBlur: validateStart,\n                  onChange: handleChange,\n                  name: \"startdate\",\n                  type: \"date\",\n                  placeholder: \"Start Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"text-danger text-center\",\n                  children: errors.startdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: classes.end1,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            controlId: \"reportenddate\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  className: classes.textstyl,\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"EndDate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: classes.input,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  className: classes.str21,\n                  onBlur: validateEnd,\n                  onChange: handleChange,\n                  name: \"enddate\",\n                  type: \"date\",\n                  placeholder: \"End Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"text-danger text-center\",\n                  children: errors.enddate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: classes.subm,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.buttonsty,\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: classes.expo,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.csvsty,\n              children: /*#__PURE__*/_jsxDEV(CSVLink, {\n                className: classes.sty11,\n                ...csvLink,\n                children: \"Export to CSV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tableBox,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: classes.tableHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"StartDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"EndDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: classes.tableBody,\n            children: slice.map(contact => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: contact.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: contact.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: contact.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: contact.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: contact.endDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)]\n            }, contact._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        range: range,\n        slice: slice,\n        setPage: setPage,\n        page: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Reports, \"bnQly4fkPeZEhP1Y2WwR2ciyzc4=\", false, function () {\n  return [useTable];\n});\n\n_c = Reports;\nexport default Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["D:/Download/job-portal-project-master/job-portal-project-master/job-frontend/src/Job Provider/Components/Report/content/Content.js"],"names":["React","FormGroup","FormControl","Col","Row","Table","Container","FormLabel","classes","useState","useEffect","useTable","TableFooter","CSVLink","axios","Config","Reports","reportsData","setReportsData","page","setPage","slice","range","forminputs","setFormInputs","filterdates","setFilterDates","startdate","enddate","errors","setErrors","fetchTd","res","get","SERVER_URL","headers","Authorization","localStorage","getItem","updatedList","data","jobs","validateStart","error","values","validateEnd","Date","validate","handleSubmit","stdate","endate","newData","filter","report","date","startDate","handleChange","event","name","target","value","Jobs","label","key","csvLink","filename","rowStyle","repo","span11","filters","str1","textstyl","input","str2","end1","str21","actions","subm","buttonsty","expo","csvsty","sty11","tableBox","tableHeader","tableBody","map","contact","title","description","category","endDate","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  FormGroup,\n  FormControl,\n  Col,\n  Row,\n  Table,\n  Container,\n  FormLabel,\n} from \"react-bootstrap\";\nimport classes from \"./Content.module.css\";\nimport { useState, useEffect } from \"react\";\nimport useTable from \"../../../../hooks/useTable\";\nimport TableFooter from \"../../../../components/dashboard/Tables/TableFooter\";\nimport { CSVLink } from \"react-csv\";\nimport axios from \"axios\";\nimport Config from \"../../../../config/Config.json\";\n// import dateFormat from 'dateformat';\n\nfunction Reports() {\n  const [reportsData, setReportsData] = useState([]);\n\n  const [page, setPage] = useState(1);\n  const { slice, range } = useTable(reportsData, page, 5);\n\n  const [forminputs, setFormInputs] = useState({});\n  const [filterdates, setFilterDates] = useState({\n    startdate: \"\",\n    enddate: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    const fetchTd = async () => {\n      const res = await axios.get(`${Config.SERVER_URL + \"provider/jobs/\"}`, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      });\n\n      const updatedList = [...res.data.jobs];\n      // const updatedList = ord.map(item =>\n      //   {\n\n      //       return {...item, startDate:dateFormat(item.startDate,configData.DATE_FORMAT,true)}\n      //       //return{...item,created:new Intl.DateTimeFormat(\"en-IN\",\"mmmm dd, yyyy\" ).format(item.created)}\n      //       // configData.DATE_FORMAT_OBJECT\n      //   })\n      // setData(updatedList);\n      setReportsData(updatedList);\n    };\n    fetchTd();\n  }, []);\n\n  // useEffect(() => {\n\n  //   const fetchbug = async () => {\n  //   await axios.get(\"http://localhost:3000/bugs\")\n  //       .then(res => {\n  //           const bugs = res.data;\n  //           setJsonBugs(bugs);\n\n  //       });\n  //   };\n  //   fetchbug();\n  // })\n  const validateStart = () => {\n    let error = \"\";\n    if (!forminputs[\"startdate\"] && forminputs[\"enddate\"]) {\n      error = \"please enter start date\";\n    }\n    if (!forminputs[\"startdate\"] && !forminputs[\"enddate\"]) {\n      setErrors({});\n    }\n    setErrors((values) => ({ ...values, startdate: error }));\n  };\n\n  const validateEnd = () => {\n    let error = \"\";\n    if (!forminputs[\"enddate\"] && forminputs[\"startdate\"]) {\n      error = \"please enter end date\";\n    }\n    if (!forminputs[\"startdate\"] && !forminputs[\"enddate\"]) {\n      setErrors({});\n    } else if (forminputs[\"enddate\"] && forminputs[\"startdate\"]) {\n      let startdate = new Date(forminputs[\"startdate\"]);\n      let enddate = new Date(forminputs[\"enddate\"]);\n      if (startdate > enddate) {\n        error = \"end date should be greater than start date\";\n      }\n    }\n    setErrors((values) => ({ ...values, enddate: error }));\n  };\n\n  const validate = () => {\n    validateStart();\n    validateEnd();\n    if (errors.startdate || errors.enddate) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleSubmit = () => {\n    if (validate()) {\n      setFilterDates({ ...forminputs });\n    }\n    let stdate = new Date(forminputs.startdate);\n    let endate = new Date(forminputs.enddate);\n    let newData = reportsData.filter((report) => {\n      // console.log(report);\n      let date = new Date(report.startDate);\n      if (date >= stdate && date <= endate) {\n        return report;\n      }\n      // return;\n    });\n    // console.log(newData);\n    setReportsData(newData);\n  };\n  // console.log(reportsData);\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormInputs((values) => ({ ...values, [name]: value }));\n  };\n  const Jobs = [...reportsData];\n\n  const headers = [\n    {\n      label: \"JobId\",\n      key: \"jobId\",\n    },\n    {\n      label: \"ProviderId\",\n      key: \"providerId\",\n    },\n    {\n      label: \"Title\",\n      key: \"title\",\n    },\n    {\n      label: \"StartDate\",\n      key: \"startDate\",\n    },\n    {\n      label: \"EndDate\",\n      key: \"endDate\",\n    },\n  ];\n\n  const csvLink = {\n    headers: headers,\n    data: Jobs,\n    filename: \"csvfile.csv\",\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className={classes.rowStyle}>\n          <Col className={`${classes.repo} col-md-3`}>\n            <span className={classes.span11}>Reports</span>\n          </Col>\n        </Row>\n\n        <Row className={classes.filters}>\n          <Col className={`${classes.str1} ${classes}`}>\n            <FormGroup controlId=\"reportstartdate\">\n              <Row>\n                <Col>\n                  <FormLabel className={classes.textstyl}>\n                    <b>StartDate</b>\n                  </FormLabel>\n                </Col>\n                <Col className={classes.input}>\n                  <FormControl\n                    className={classes.str2}\n                    onBlur={validateStart}\n                    onChange={handleChange}\n                    name=\"startdate\"\n                    type=\"date\"\n                    placeholder=\"Start Date\"\n                  />\n\n                  <Col className=\"text-danger text-center\">\n                    {errors.startdate}\n                  </Col>\n                </Col>\n              </Row>\n            </FormGroup>\n          </Col>\n\n          <Col className={classes.end1}>\n            <FormGroup controlId=\"reportenddate\">\n              <Row>\n                <Col>\n                  <FormLabel className={classes.textstyl}>\n                    <b>EndDate</b>\n                  </FormLabel>\n                </Col>\n                <Col className={classes.input}>\n                  <FormControl\n                    className={classes.str21}\n                    onBlur={validateEnd}\n                    onChange={handleChange}\n                    name=\"enddate\"\n                    type=\"date\"\n                    placeholder=\"End Date\"\n                  />\n\n                  <Col className=\"text-danger text-center\">\n                    {errors.enddate}\n                  </Col>\n                </Col>\n              </Row>\n            </FormGroup>\n          </Col>\n          <Col className={classes.actions}>\n            <Col className={classes.subm}>\n              <button className={classes.buttonsty} onClick={handleSubmit}>\n                Submit\n              </button>\n            </Col>\n            <Col className={classes.expo}>\n              <button className={classes.csvsty}>\n                <CSVLink className={classes.sty11} {...csvLink}>\n                  Export to CSV\n                </CSVLink>\n              </button>\n            </Col>\n          </Col>\n        </Row>\n\n        <div className={classes.tableBox}>\n          <Table striped hover>\n            <thead>\n              <tr className={classes.tableHeader}>\n                {/* <th>JobId</th>\n                <th>providerId</th> */}\n                <th>Title</th>\n                <th>description</th>\n                <th>Category</th>\n                <th>StartDate</th>\n                <th>EndDate</th>\n              </tr>\n            </thead>\n            <tbody className={classes.tableBody}>\n              {slice.map((contact) => (\n                <tr key={contact._id}>\n                  <td>{contact.title}</td>\n                  <td>{contact.description}</td>\n                  <td>{contact.category}</td>\n                  <td>{contact.startDate}</td>\n                  <td>{contact.endDate}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n        <TableFooter\n          range={range}\n          slice={slice}\n          setPage={setPage}\n          page={page}\n        />\n      </Container>\n    </>\n  );\n}\nexport default Reports;\n"]},"metadata":{},"sourceType":"module"}