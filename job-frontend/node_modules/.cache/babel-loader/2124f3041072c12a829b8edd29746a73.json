{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\job-portal-project-master\\\\job-portal-project-master\\\\job-frontend\\\\src\\\\JobSeeker\\\\JobList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Jobitem from \"./Job_item\";\nimport ApplyModal from \"./ApplyModal\";\nimport classes from \"./Modalf.module.css\";\nimport Config from \"../config/Config.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet jobsData = [];\n\nconst Jobs = () => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const [action, setAction] = useState(false);\n  const [jobSet, setjobSet] = useState(\"\");\n  const [jobs, setJobs] = useState([]);\n\n  const closeModalHandler = () => {\n    setModal(false);\n  };\n\n  const jobApply = applyData => {\n    setModal(true);\n    setjobSet(applyData);\n  };\n\n  const jobSearchHandler = event => {\n    event.preventDefault();\n    setJobs(jobsData.filter(job => job.title.toLowerCase().includes(event.target.value.toLowerCase())));\n  };\n\n  useEffect(() => {\n    axios.get(`${Config.SERVER_URL + \"user/jobsAvailable\"}`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      jobsData = response.data.jobs;\n      setJobs(response.data.jobs);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [action]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginTop: \"20px\",\n          marginLeft: \"85px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 5,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"search\",\n            onChange: jobSearchHandler,\n            placeholder: \"Search Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.grid,\n        children: jobs.map(jobItem => /*#__PURE__*/_jsxDEV(Jobitem, {\n          item: jobItem,\n          jobApply: jobApply\n        }, jobItem._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(ApplyModal, {\n      job: jobSet,\n      onOpen: modal,\n      onClose: closeModalHandler,\n      changes: setAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Jobs, \"vuddh0FIIjvUsGw6x6qRI3XEL6g=\");\n\n_c = Jobs;\nexport default Jobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"sources":["D:/Download/job-portal-project-master/job-portal-project-master/job-frontend/src/JobSeeker/JobList.js"],"names":["React","useState","useEffect","Row","Col","Container","axios","Jobitem","ApplyModal","classes","Config","jobsData","Jobs","modal","setModal","action","setAction","jobSet","setjobSet","jobs","setJobs","closeModalHandler","jobApply","applyData","jobSearchHandler","event","preventDefault","filter","job","title","toLowerCase","includes","target","value","get","SERVER_URL","headers","Authorization","localStorage","getItem","then","response","data","catch","err","console","log","marginTop","marginLeft","grid","map","jobItem","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,iBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,IAAIC,QAAQ,GAAG,EAAf;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMoB,iBAAiB,GAAG,MAAM;AAC9BP,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMQ,QAAQ,GAAIC,SAAD,IAAe;AAC9BT,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,SAAS,CAACK,SAAD,CAAT;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,OAAO,CACLT,QAAQ,CAACgB,MAAT,CAAiBC,GAAD,IACdA,GAAG,CAACC,KAAJ,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCN,KAAK,CAACO,MAAN,CAAaC,KAAb,CAAmBH,WAAnB,EAAjC,CADF,CADK,CAAP;AAKD,GAPD;;AASA5B,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CACF4B,GADH,CACQ,GAAExB,MAAM,CAACyB,UAAP,GAAoB,oBAAqB,EADnD,EACsD;AAClDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADpB;AADyC,KADtD,EAMGC,IANH,CAMSC,QAAD,IAAc;AAClB9B,MAAAA,QAAQ,GAAG8B,QAAQ,CAACC,IAAT,CAAcvB,IAAzB;AACAC,MAAAA,OAAO,CAACqB,QAAQ,CAACC,IAAT,CAAcvB,IAAf,CAAP;AACD,KATH,EAUGwB,KAVH,CAUUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAZH;AAaD,GAdQ,EAcN,CAAC7B,MAAD,CAdM,CAAT;AAgBA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEgC,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,UAAU,EAAE;AAAjC,SAAZ;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,QAAQ,EAAExB,gBAHZ;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEf,OAAO,CAACwC,IAAxB;AAAA,kBACG9B,IAAI,CAAC+B,GAAL,CAAUC,OAAD,iBACR,QAAC,OAAD;AAA2B,UAAA,IAAI,EAAEA,OAAjC;AAA0C,UAAA,QAAQ,EAAE7B;AAApD,WAAc6B,OAAO,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF,EAqBGvC,KAAK,iBACJ,QAAC,UAAD;AACE,MAAA,GAAG,EAAEI,MADP;AAEE,MAAA,MAAM,EAAEJ,KAFV;AAGE,MAAA,OAAO,EAAEQ,iBAHX;AAIE,MAAA,OAAO,EAAEL;AAJX;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAxED;;GAAMJ,I;;KAAAA,I;AA0EN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Jobitem from \"./Job_item\";\nimport ApplyModal from \"./ApplyModal\";\nimport classes from \"./Modalf.module.css\";\nimport Config from \"../config/Config.json\";\n\nlet jobsData = [];\nconst Jobs = () => {\n  const [modal, setModal] = useState(false);\n  const [action, setAction] = useState(false);\n  const [jobSet, setjobSet] = useState(\"\");\n  const [jobs, setJobs] = useState([]);\n\n  const closeModalHandler = () => {\n    setModal(false);\n  };\n\n  const jobApply = (applyData) => {\n    setModal(true);\n    setjobSet(applyData);\n  };\n\n  const jobSearchHandler = (event) => {\n    event.preventDefault();\n    setJobs(\n      jobsData.filter((job) =>\n        job.title.toLowerCase().includes(event.target.value.toLowerCase())\n      )\n    );\n  };\n\n  useEffect(() => {\n    axios\n      .get(`${Config.SERVER_URL + \"user/jobsAvailable\"}`, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        jobsData = response.data.jobs;\n        setJobs(response.data.jobs);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [action]);\n\n  return (\n    <div>\n      <Container>\n        <Row style={{ marginTop: \"20px\", marginLeft: \"85px\" }}>\n          <Col sm={3}></Col>\n          <Col sm={5}>\n            <input\n              className=\"form-control\"\n              type=\"search\"\n              onChange={jobSearchHandler}\n              placeholder=\"Search Jobs\"\n            ></input>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid>\n        <div className={classes.grid}>\n          {jobs.map((jobItem) => (\n            <Jobitem key={jobItem._id} item={jobItem} jobApply={jobApply} />\n          ))}\n        </div>\n      </Container>\n      {modal && (\n        <ApplyModal\n          job={jobSet}\n          onOpen={modal}\n          onClose={closeModalHandler}\n          changes={setAction}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Jobs;\n"]},"metadata":{},"sourceType":"module"}