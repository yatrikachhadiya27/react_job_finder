{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\job-portal-project-master\\\\job-portal-project-master\\\\job-frontend\\\\src\\\\login\\\\Components\\\\Mdashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport AdminScreen from \"../../AdminScreen\";\nimport Login from \"./Login\";\nimport ProviderScreen from \"../../ProviderScreen\";\nimport JobSeekerScreen from \"../../JobSeekerScreen\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Mdashboard() {\n  _s();\n\n  // const dispatch = useDispatch();\n  const selectauthToken = rootstate => rootstate.authToken;\n\n  const authToken = localStorage.getItem(\"token\");\n  const redToken = useSelector(selectauthToken); // if(redToken == {}){\n  //   if(authToken){\n  //     dispatch({type:\"SETAUTHTOKEN\",data:authToken});\n  //   }\n  // }\n  // if (authToken !== null && redAuthToken == {}) {\n  //   dispatch({ type: \"SETAUTHTOKEN\", data: authToken });\n  // }\n\n  if (authToken) {\n    const redAuthToken = jwtDecode(authToken); // console.log(\"lol\", decoded);\n\n    if (redAuthToken.role === \"Admin\") {\n      return /*#__PURE__*/_jsxDEV(AdminScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (redAuthToken.role === \"Job Provider\") {\n      return /*#__PURE__*/_jsxDEV(ProviderScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (redAuthToken.role === \"User\") {\n      return /*#__PURE__*/_jsxDEV(JobSeekerScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Mdashboard, \"/KWrmCbij789q07RAvnD/UFsrXg=\", false, function () {\n  return [useSelector];\n});\n\n_c = Mdashboard;\nexport default Mdashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mdashboard\");","map":{"version":3,"sources":["D:/Download/job-portal-project-master/job-portal-project-master/job-frontend/src/login/Components/Mdashboard.js"],"names":["useSelector","AdminScreen","Login","ProviderScreen","JobSeekerScreen","jwtDecode","Mdashboard","selectauthToken","rootstate","authToken","localStorage","getItem","redToken","redAuthToken","role"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AACA,QAAMC,eAAe,GAAIC,SAAD,IAAeA,SAAS,CAACC,SAAjD;;AAEA,QAAMA,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,CAACO,eAAD,CAA5B,CALoB,CAOpB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAIE,SAAJ,EAAe;AACb,UAAMI,YAAY,GAAGR,SAAS,CAACI,SAAD,CAA9B,CADa,CAEb;;AACA,QAAII,YAAY,CAACC,IAAb,KAAsB,OAA1B,EAAmC;AACjC,0BAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAID,YAAY,CAACC,IAAb,KAAsB,cAA1B,EAA0C;AACxC,0BAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAID,YAAY,CAACC,IAAb,KAAsB,MAA1B,EAAkC;AAChC,0BAAO,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AACD,sBACE;AAAA,2BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;GAnCQR,U;UAKUN,W;;;KALVM,U;AAqCT,eAAeA,UAAf","sourcesContent":["import { useSelector } from \"react-redux\";\nimport AdminScreen from \"../../AdminScreen\";\nimport Login from \"./Login\";\nimport ProviderScreen from \"../../ProviderScreen\";\nimport JobSeekerScreen from \"../../JobSeekerScreen\";\nimport jwtDecode from \"jwt-decode\";\n\nfunction Mdashboard() {\n  // const dispatch = useDispatch();\n  const selectauthToken = (rootstate) => rootstate.authToken;\n\n  const authToken = localStorage.getItem(\"token\");\n  const redToken = useSelector(selectauthToken);\n\n  // if(redToken == {}){\n  //   if(authToken){\n  //     dispatch({type:\"SETAUTHTOKEN\",data:authToken});\n  //   }\n  // }\n\n  // if (authToken !== null && redAuthToken == {}) {\n  //   dispatch({ type: \"SETAUTHTOKEN\", data: authToken });\n  // }\n\n  if (authToken) {\n    const redAuthToken = jwtDecode(authToken);\n    // console.log(\"lol\", decoded);\n    if (redAuthToken.role === \"Admin\") {\n      return <AdminScreen />;\n    }\n    if (redAuthToken.role === \"Job Provider\") {\n      return <ProviderScreen />;\n    }\n    if (redAuthToken.role === \"User\") {\n      return <JobSeekerScreen />;\n    }\n  }\n  return (\n    <>\n      <Login />\n    </>\n  );\n}\n\nexport default Mdashboard;\n"]},"metadata":{},"sourceType":"module"}